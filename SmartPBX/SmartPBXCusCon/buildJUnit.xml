<?xml version="1.0" encoding="UTF-8"?>
<project name="" default="all" basedir=".">
    <!-- set property (ENV)-->
    <property environment="myenv" />
    <condition property="TOMCAT_HOME_DIR" value="${myenv.TOMCAT_HOME}">
        <isset property="myenv.TOMCAT_HOME" />
    </condition>
    <condition property="TOMCAT_HOME_DIR" value="${myenv.CATALINA_HOME}">
        <isset property="myenv.CATALINA_HOME" />
    </condition>
    <property name="TOMCAT_LIB_DIR" value="${TOMCAT_HOME_DIR}/lib" />

    <!-- set property -->
    <condition property="fwdslash" value="\\">
        <os family="windows" />
    </condition>
    <condition property="fwdslash" value="/">
        <os family="unix" />
    </condition>

    <property name="webcontent.root" value="${basedir}/WebContent" />
    <property name="web-inf" value="${webcontent.root}/WEB-INF" />

    <property name="lib" value="${web-inf}/lib" />
    <property name="lib.test" value="${basedir}/lib_test" />

    <property name="classes" value="${web-inf}/classes" />

    <property name="src.dir" location="${basedir}/src" />
    <property name="junit.dir" value="test" />
    <property name="test.dir" location="${junit.dir}" />
    <property name="target.report.dir" location="report" />


    <property name="pmd.home.dir" location="quality/pmd/pmd-bin-4.2.6" />
    <property name="findbugs.home.dir" location="quality/findbugs/findbugs-3.0.1"/>
    <property name="checkstyle.home.dir" location="quality/checkstyle"/>


    <!-- Prerequisite for foreach tag -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${lib.test}/ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <!-- ============================================================= -->
    <!-- Define classpath.                                             -->
    <!-- ============================================================= -->
    <path id="classpath">
        <fileset dir="${lib}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${lib.test}">
            <include name="**/*.jar" />
        </fileset>
        <!-- TOMCAT -->
        <fileset dir="${TOMCAT_LIB_DIR}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${classes}" />
    </path>

    <path id="pmd.classpath">
        <pathelement location="${classes}" />
        <fileset dir="WebContent/WEB-INF/lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${pmd.home.dir}/lib/">
            <include name="*.jar" />
        </fileset>

        <fileset dir="${lib}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${lib.test}">
            <include name="**/*.jar" />
        </fileset>
        <!-- TOMCAT -->
        <fileset dir="${TOMCAT_LIB_DIR}">
            <include name="**/*.jar" />
        </fileset>

    </path>


    <!-- ============================================================= -->
    <!-- Clean up all files that are generated.                        -->
    <!-- ============================================================= -->
    <target name="clean">
        <delete quiet="true" dir="${classes}" />
        <delete quiet="true" dir="${target.report.dir}" />
    </target>


    <!-- ============================================================= -->
    <!-- Prepares the project.                                         -->
    <!-- ============================================================= -->
    <target name="prepare">
        <mkdir dir="${classes}" />

        <!-- Copy SQL file for run JUnit. -->
        <copy todir="${classes}">
            <fileset dir="${test.dir}" includes="*.sql, *.properties" />
        </copy>
    </target>


    <!-- ============================================================= -->
    <!-- Compiles the source code.                                     -->
    <!-- ============================================================= -->
    <target name="compileSrc" depends="prepare">

        <javac srcdir="${src.dir}" destdir="${classes}" includeantruntime="false" encoding="utf-8"
            debug="on" source="1.7">
            <classpath refid="classpath" />
        </javac>
    </target>

    <!-- ============================================================= -->
    <!-- Compiles the test code.                                       -->
    <!-- ============================================================= -->
    <target name="compileTest" depends="compileSrc">

        <javac srcdir="${test.dir}" destdir="${classes}" includeantruntime="false" encoding="utf-8">
            <classpath refid="classpath" />
        </javac>
    </target>


    <target name="testJUnit" depends="compileTest">
        <mkdir dir="${target.report.dir}" />
        <mkdir dir="${target.report.dir}/junit" />
        <junit printsummary="yes" haltonfailure="false">

            <formatter type="plain" usefile="false" />
            <formatter type="xml" />

            <classpath refid="classpath" />

            <batchtest todir="${target.report.dir}/junit">
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- ============================================================= -->
    <!-- Report                                                        -->
    <!-- ============================================================= -->
    <target name="report" depends="testJUnit">
        <mkdir dir="${target.report.dir}/html" />
        <junitreport todir="${target.report.dir}">
            <fileset dir="${target.report.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${target.report.dir}/html" />
        </junitreport>
    </target>


    <!-- ============================================================= -->
    <!-- Run Checkstyle -->
    <target name="checkstyle"  depends="compileTest">
        <echo message="Running CheckStyle..."/>

        <mkdir dir="${target.report.dir}/checkstyle/" />

        <taskdef resource="checkstyletask.properties" classpath="${checkstyle.home.dir}/checkstyle-6.6-all.jar" />

        <!-- Run analysis-->
        <checkstyle config="${checkstyle.home.dir}/sun_checks.xml" failureProperty="checkstyle.failure" failOnViolation="false">
            <formatter type="xml" tofile="${target.report.dir}/checkstyle/checkstyle_report.xml" />
            <fileset dir="${src.dir}" includes="**/*.java" />
        </checkstyle>

        <!-- Convert xml report to html report -->
        <!--
        <xslt
            in="${target.report.dir}/checkstyle/checkstyle_report.xml"
            out="${target.report.dir}/checkstyle/checkstyle_report.html"
            style="${checkstyle.home.dir}/checkstyle-noframes.xsl" />
        -->
    </target>


    <!-- Run Findbugs -->
    <taskdef name="findbugs"
        classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
        classpath="${findbugs.home.dir}/lib/findbugs-ant.jar" />

    <target name="findbugs" depends="compileTest">
        <echo message="Running findbugs..." />

        <mkdir dir="${target.report.dir}/findbugs" />

        <findbugs home="${findbugs.home.dir}"
            output="xml:withMessages"
            outputFile="${target.report.dir}/findbugs/findbugs.xml"
            debug="false" >

            <sourcePath path="${src.dir}" />
            <class location="${classes}" />

            <auxClasspath>
                <path refid="classpath"/>
                <fileset dir="WebContent/WEB-INF/lib">
                    <include name="**/*.jar" />
                </fileset>

            </auxClasspath>
        </findbugs>

        <!-- Convert xml report to html report -->
        <!--
        <xslt in="${target.report.dir}/findbugs/findbugs.xml"
            out="${target.report.dir}/findbugs/findbugs.html"
            style="${findbugs.home.dir}/src/xsl/default.xsl" />
        -->
    </target>

    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath" />
    <target name="pmd" depends="compileTest">
        <echo message="Running PMD..." />

        <mkdir dir="${target.report.dir}/pmd"/>

        <pmd rulesetfiles="quality/pmd/pmd-ruleset.xml">

            <formatter type="xml" toFile="${target.report.dir}/pmd/pmd_report.xml" />
            <fileset dir="${src.dir}">
                <include name="**/*.java" />
                <include name="**/*.properties" />
            </fileset>

        </pmd>

        <!--
        <java fork="true" failonerror="yes" classname="quality.pmd.decodeUTF8.DecodeUTF8">
            <classpath refid="classpath" />
            <arg line="${target.report.dir}/pmd/pmd_report.xml" />
        </java>
        <replace file="${target.report.dir}/pmd/pmd_report.xml" replacefilterfile="quality/pmd/regex/unicode.properties"/>
        -->

        <!-- Convert xml report to html report -->
        <!--
        <xslt in="${target.report.dir}/pmd/pmd_report.xml"
            style="${pmd.home.dir}/etc/xslt/pmd-report-per-class.xslt"
            out="${target.report.dir}/pmd/pmd_report.html" />
            -->
    </target>

    <target name="all" depends="testJUnit,checkstyle,findbugs,pmd"/>

</project>
<!-- (C) NTT Communications  2016  All Rights Reserved -->
