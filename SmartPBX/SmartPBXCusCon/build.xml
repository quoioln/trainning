<?xml version="1.0" encoding="UTF-8"?>
<project name="" default="all" basedir=".">

    <!-- set property -->

    <property file="build.properties" />
    <property name="build.compiler" value="modern"/>
    <property name="build.sysclasspath" value="ignore"/>
	
   <!-- set property (ENV)-->
   <property environment="myenv"/>
    <condition property="TOMCAT_HOME_DIR" value="${myenv.TOMCAT_HOME}">
        <isset property="myenv.TOMCAT_HOME"/>
    </condition>
    <condition property="TOMCAT_HOME_DIR" value="${myenv.CATALINA_HOME}">
        <isset property="myenv.CATALINA_HOME"/>
    </condition>
    <property name="TOMCAT_LIB_DIR" value="${TOMCAT_HOME_DIR}/lib"/>
    
    <!-- set property -->
    <property name="webcontent.root" value="${basedir}/WebContent"/>
    <property name="web-inf" value="${webcontent.root}/WEB-INF"/>

    <property name="src" value="${basedir}/src"/>
    <property name="lib" value="${web-inf}/lib"/>
    <property name="target" value="${basedir}" />
    
    <!-- <property name="classes" value="${target}/classes"/> -->
    <property name="classes" value="${web-inf}/classes"/>
    <property name="javadocs" value="${target}/doc"/>
    <property name="bak" value="${target}/bak"/>
    <property name=".settings" value="${target}/.settings"/>


    <!-- ============================================================= -->
    <!-- Classpath with libraries needed to compile this application   -->
    <!-- ============================================================= -->
    <path id="classpath">
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
        </fileset>
        <!-- TOMCAT -->
        <fileset dir="${TOMCAT_LIB_DIR}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- ============================================================= -->
    <!-- Prepares the project                                          -->
    <!-- ============================================================= -->
    <target name="prepare">
        <defaultexcludes echo="false" add="**/*.nbattrs"/>
    
        <mkdir dir="${classes}"/>
        <mkdir dir="${lib}"/>
    	
    </target>

    <!-- ============================================================= -->
    <!-- Compiles the source code                                      -->
    <!-- ============================================================= -->
    <target name="compile" depends="prepare">

        <javac srcdir="${src}"
            destdir="${classes}"
            encoding="${ENCODING}"
            debug="on"
            excludes="**/bak/**,**/*.bak"
            optimize="on">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <!-- ============================================================= -->
    <!-- Clean up all files that are generated.                        -->
    <!-- ============================================================= -->
    <target name="clean">
        <delete quiet="true" dir="${classes}"/>
        <delete quiet="true" dir="${javadocs}"/>
        <delete quiet="true" dir="${bak}"/>
        <delete quiet="true" dir="${.settings}"/>
        <delete file="${target}/export/${NAME}.war"/>
    </target>

    <!-- ============================================================= -->
    <!-- Clean and then compile the project                            -->
    <!-- ============================================================= -->
    <target name="rebuild">
        <antcall target="clean"/>
        <antcall target="compile"/>
    </target>

    <!-- ============================================================= -->
    <!-- Create the war file                                           -->
    <!-- ============================================================= -->
    
    <target name="war">
        <echo message="make war file." />
        <war destfile="${target}/export/${NAME}.war" webxml="${web-inf}/web.xml">
            
            <!-- 設定ファイル,contentフォルダをWEB-INFフォルダの下に配置 -->
            <webinf dir="${web-inf}" includes="*.xml,**/content/**"/>
            
            <!-- 外部ライブラリファイルをWEB-INF/libフォルダの下に配置 -->
            <lib dir="${lib}" includes="*.jar"/>
            
            <!-- ビルドしたclassファイルをWEB-INF/classesフォルダに配置 -->
            <classes dir="${classes}"/>
            
            <!--
                 global_english.properties  
                 global_japanese.properties
                 log4j.properties  
                 struts.xml をSmartPBXフォルダに配置
            -->
            <classes dir="${src}">
            	<!--
            	<include name="**/global_english.properties" />
            	<include name="**/global_japanese.properties" />
            	<include name="**/log4j.properties" />
            	<include name="**/struts.xml" />
            	-->
            	<include name="*.properties" />
                <include name="*.xml" />
            	<exclude name="**/web.xml"/>
            </classes>
            
            <!-- css  error  favicon.ico  fonts  images  index.jsp  jsをSmartPBXフォルダに配置 -->
            <fileset dir="${webcontent.root}">
                <include name = "**/*" />
                <exclude name = "**/*Test*" />
                <exclude name = "**/WEB-INF/**" />
                <exclude name = "**/META-INF/**" />
            </fileset>
        </war>
    </target> 


    <target name="all" depends="compile,war">
    </target>

</project>
<!-- (C) NTT Communications  2013  All Rights Reserved -->
